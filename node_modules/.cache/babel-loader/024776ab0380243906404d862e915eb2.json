{"ast":null,"code":"import _objectSpread from \"/Users/pdrufo/projects/noteful-client-db/node_modules/@babel/runtime/helpers/esm/objectSpread2\";\nimport _classCallCheck from \"/Users/pdrufo/projects/noteful-client-db/node_modules/@babel/runtime/helpers/esm/classCallCheck\";\nimport _createClass from \"/Users/pdrufo/projects/noteful-client-db/node_modules/@babel/runtime/helpers/esm/createClass\";\nimport _possibleConstructorReturn from \"/Users/pdrufo/projects/noteful-client-db/node_modules/@babel/runtime/helpers/esm/possibleConstructorReturn\";\nimport _getPrototypeOf from \"/Users/pdrufo/projects/noteful-client-db/node_modules/@babel/runtime/helpers/esm/getPrototypeOf\";\nimport _inherits from \"/Users/pdrufo/projects/noteful-client-db/node_modules/@babel/runtime/helpers/esm/inherits\";\nvar _jsxFileName = \"/Users/pdrufo/projects/noteful-client-db/src/AddFolder/AddFolder.js\";\nimport React, { Component } from 'react';\nimport NotefulForm from '../NotefulForm/NotefulForm';\nimport ApiContext from '../ApiContext';\nimport ValidationError from '../ValidationError';\nimport config from '../config';\nimport './AddFolder.css';\n\nvar AddFolder =\n/*#__PURE__*/\nfunction (_Component) {\n  _inherits(AddFolder, _Component);\n\n  function AddFolder(props) {\n    var _this;\n\n    _classCallCheck(this, AddFolder);\n\n    _this = _possibleConstructorReturn(this, _getPrototypeOf(AddFolder).call(this, props));\n\n    _this.handleSubmit = function (e) {\n      e.preventDefault();\n      var folder = {\n        name: e.target['folder-name'].value\n      };\n      fetch(\"\".concat(config.API_ENDPOINT, \"/folders\"), {\n        method: 'POST',\n        headers: {\n          'content-type': 'application/json'\n        },\n        body: JSON.stringify(folder)\n      }).then(function (res) {\n        if (!res.ok) return res.json().then(function (e) {\n          return Promise.reject(e);\n        });\n        return res.json();\n      }).then(function (folder) {\n        _this.context.addFolder(folder);\n\n        _this.props.history.push(\"/folders/\".concat(folder.id));\n      }).catch(function (error) {\n        console.error({\n          error: error\n        });\n      });\n    };\n\n    _this.validateForm = function () {\n      _this.setState({\n        formValid: _this.state.nameValid\n      });\n    };\n\n    _this.state = {\n      name: '',\n      formValid: false,\n      validationMessages: {\n        name: ''\n      }\n    };\n    return _this;\n  }\n\n  _createClass(AddFolder, [{\n    key: \"updateName\",\n    value: function updateName(name) {\n      var _this2 = this;\n\n      this.setState({\n        name: name\n      }, function () {\n        _this2.validateName(name);\n      });\n    }\n  }, {\n    key: \"validateName\",\n    value: function validateName(fieldValue) {\n      var _this3 = this;\n\n      var fieldErrors = _objectSpread({}, this.state.validationMessages);\n\n      var hasError = false;\n      fieldValue = fieldValue.trim();\n\n      if (fieldValue.length === 0) {\n        fieldErrors.name = 'Name is required';\n        hasError = true;\n      } else {\n        if (fieldValue.length < 3) {\n          fieldErrors.name = 'Name must be at least 3 characters long';\n          hasError = true;\n        } else {\n          fieldErrors.name = '';\n          hasError = false;\n        }\n      }\n\n      this.setState({\n        validationMessages: fieldErrors,\n        nameValid: !hasError\n      }, function () {\n        _this3.validateForm();\n      });\n    }\n  }, {\n    key: \"render\",\n    value: function render() {\n      var _this4 = this;\n\n      return React.createElement(\"section\", {\n        className: \"AddFolder\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 92\n        },\n        __self: this\n      }, React.createElement(\"h2\", {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 93\n        },\n        __self: this\n      }, \"Create a folder\"), React.createElement(NotefulForm, {\n        onSubmit: this.handleSubmit,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 94\n        },\n        __self: this\n      }, React.createElement(\"div\", {\n        className: \"field\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 95\n        },\n        __self: this\n      }, React.createElement(\"label\", {\n        htmlFor: \"folder-name-input\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 96\n        },\n        __self: this\n      }, \"Name\"), React.createElement(\"input\", {\n        type: \"text\",\n        id: \"folder-name-input\",\n        name: \"folder-name\",\n        onChange: function onChange(e) {\n          return _this4.updateName(e.target.value);\n        },\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 99\n        },\n        __self: this\n      })), React.createElement(\"div\", {\n        className: \"buttons\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 106\n        },\n        __self: this\n      }, React.createElement(\"button\", {\n        disabled: !this.state.formValid,\n        type: \"submit\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 107\n        },\n        __self: this\n      }, \"Add folder\"))), React.createElement(ValidationError, {\n        hasError: !this.state.nameValid,\n        message: this.state.validationMessages.name,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 112\n        },\n        __self: this\n      }));\n    }\n  }]);\n\n  return AddFolder;\n}(Component);\n\nAddFolder.defaultProps = {\n  history: {\n    push: function push() {}\n  }\n};\nAddFolder.contextType = ApiContext;\nexport { AddFolder as default };","map":{"version":3,"sources":["/Users/pdrufo/projects/noteful-client-db/src/AddFolder/AddFolder.js"],"names":["React","Component","NotefulForm","ApiContext","ValidationError","config","AddFolder","props","handleSubmit","e","preventDefault","folder","name","target","value","fetch","API_ENDPOINT","method","headers","body","JSON","stringify","then","res","ok","json","Promise","reject","context","addFolder","history","push","id","catch","error","console","validateForm","setState","formValid","state","nameValid","validationMessages","validateName","fieldValue","fieldErrors","hasError","trim","length","updateName","defaultProps","contextType"],"mappings":"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","sourcesContent":["import React, { Component } from 'react'\r\nimport NotefulForm from '../NotefulForm/NotefulForm'\r\nimport ApiContext from '../ApiContext'\r\nimport ValidationError from '../ValidationError'\r\nimport config from '../config'\r\nimport './AddFolder.css'\r\n\r\nexport default class AddFolder extends Component {\r\n  constructor(props) {\r\n    super(props);\r\n    this.state = {\r\n      name: '',\r\n      formValid: false,\r\n      validationMessages: {\r\n        name: '',\r\n      }\r\n    }\r\n  }\r\n\r\n  static defaultProps = {\r\n    history: {\r\n      push: () => { }\r\n    },\r\n  }\r\n\r\n  updateName(name) {\r\n    this.setState({ name }, () => { this.validateName(name) });\r\n  }\r\n\r\n  static contextType = ApiContext;\r\n\r\n  handleSubmit = e => {\r\n    e.preventDefault()\r\n    const folder = {\r\n      name: e.target['folder-name'].value\r\n    }\r\n      fetch(`${config.API_ENDPOINT}/folders`, {\r\n        method: 'POST',\r\n        headers: {\r\n          'content-type': 'application/json'\r\n        },\r\n        body: JSON.stringify(folder),\r\n      })\r\n        .then(res => {\r\n          if (!res.ok)\r\n            return res.json().then(e => Promise.reject(e))\r\n          return res.json()\r\n        })\r\n        .then(folder => {\r\n          this.context.addFolder(folder)\r\n          this.props.history.push(`/folders/${folder.id}`)\r\n        })\r\n        .catch(error => {\r\n          console.error({ error })\r\n        })\r\n    }\r\n\r\n  validateName(fieldValue) {\r\n    const fieldErrors = {...this.state.validationMessages};\r\n    let hasError = false;\r\n\r\n    fieldValue = fieldValue.trim();\r\n    if (fieldValue.length === 0) {\r\n      fieldErrors.name = 'Name is required';\r\n      hasError = true;\r\n    } else {\r\n      if (fieldValue.length < 3) {\r\n        fieldErrors.name = 'Name must be at least 3 characters long';\r\n        hasError = true;\r\n      } else {\r\n        fieldErrors.name = '';\r\n        hasError = false;\r\n      }\r\n    }\r\n\r\n    this.setState({\r\n      validationMessages: fieldErrors,\r\n      nameValid: !hasError\r\n    }, () => {\r\n      this.validateForm();\r\n    });\r\n  }\r\n\r\n  validateForm = () => {\r\n    this.setState({\r\n        formValid: this.state.nameValid\r\n    });\r\n  }\r\n\r\n  render() {\r\n    return (\r\n      <section className='AddFolder'>\r\n        <h2>Create a folder</h2>\r\n        <NotefulForm onSubmit={this.handleSubmit}>\r\n          <div className='field'>\r\n            <label htmlFor='folder-name-input'>\r\n              Name\r\n            </label>\r\n            <input\r\n              type='text'\r\n              id='folder-name-input'\r\n              name='folder-name'\r\n              onChange={e => this.updateName(e.target.value)}\r\n              />\r\n          </div>\r\n          <div className='buttons'>\r\n            <button disabled={!this.state.formValid} type='submit'>\r\n              Add folder\r\n            </button>\r\n          </div>\r\n        </NotefulForm>\r\n        <ValidationError hasError={!this.state.nameValid} message={this.state.validationMessages.name} />\r\n      </section>\r\n    )\r\n  }\r\n}\r\n"]},"metadata":{},"sourceType":"module"}