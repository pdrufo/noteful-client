{"ast":null,"code":"import _slicedToArray from \"/Users/pdrufo/projects/noteful-client-db/node_modules/@babel/runtime/helpers/esm/slicedToArray\";\nimport _toConsumableArray from \"/Users/pdrufo/projects/noteful-client-db/node_modules/@babel/runtime/helpers/esm/toConsumableArray\";\nimport _classCallCheck from \"/Users/pdrufo/projects/noteful-client-db/node_modules/@babel/runtime/helpers/esm/classCallCheck\";\nimport _createClass from \"/Users/pdrufo/projects/noteful-client-db/node_modules/@babel/runtime/helpers/esm/createClass\";\nimport _possibleConstructorReturn from \"/Users/pdrufo/projects/noteful-client-db/node_modules/@babel/runtime/helpers/esm/possibleConstructorReturn\";\nimport _getPrototypeOf from \"/Users/pdrufo/projects/noteful-client-db/node_modules/@babel/runtime/helpers/esm/getPrototypeOf\";\nimport _inherits from \"/Users/pdrufo/projects/noteful-client-db/node_modules/@babel/runtime/helpers/esm/inherits\";\nvar _jsxFileName = \"/Users/pdrufo/projects/noteful-client-db/src/App/App.js\";\nimport React, { Component } from 'react';\nimport { Route, Link } from 'react-router-dom';\nimport { FontAwesomeIcon } from '@fortawesome/react-fontawesome';\nimport NoteListNav from '../NoteListNav/NoteListNav';\nimport NotePageNav from '../NotePageNav/NotePageNav';\nimport NoteListMain from '../NoteListMain/NoteListMain';\nimport NotePageMain from '../NotePageMain/NotePageMain';\nimport AddFolder from '../AddFolder/AddFolder';\nimport AddNote from '../AddNote/AddNote';\nimport ApiContext from '../ApiContext';\nimport config from '../config';\nimport './App.css';\n\nvar App =\n/*#__PURE__*/\nfunction (_Component) {\n  _inherits(App, _Component);\n\n  function App() {\n    var _getPrototypeOf2;\n\n    var _this;\n\n    _classCallCheck(this, App);\n\n    for (var _len = arguments.length, args = new Array(_len), _key = 0; _key < _len; _key++) {\n      args[_key] = arguments[_key];\n    }\n\n    _this = _possibleConstructorReturn(this, (_getPrototypeOf2 = _getPrototypeOf(App)).call.apply(_getPrototypeOf2, [this].concat(args)));\n    _this.state = {\n      notes: [],\n      folders: []\n    };\n\n    _this.handleAddFolder = function (folder) {\n      _this.setState({\n        folders: [].concat(_toConsumableArray(_this.state.folders), [folder])\n      });\n    };\n\n    _this.handleAddNote = function (note) {\n      _this.setState({\n        notes: [].concat(_toConsumableArray(_this.state.notes), [note])\n      });\n    };\n\n    _this.handleDeleteNote = function (noteId) {\n      _this.setState({\n        notes: _this.state.notes.filter(function (note) {\n          return note.id !== noteId;\n        })\n      });\n    };\n\n    return _this;\n  }\n\n  _createClass(App, [{\n    key: \"componentDidMount\",\n    value: function componentDidMount() {\n      var _this2 = this;\n\n      Promise.all([fetch(\"\".concat(config.API_ENDPOINT, \"/notes\")), fetch(\"\".concat(config.API_ENDPOINT, \"/folders\"))]).then(function (_ref) {\n        var _ref2 = _slicedToArray(_ref, 2),\n            notesRes = _ref2[0],\n            foldersRes = _ref2[1];\n\n        if (!notesRes.ok) return notesRes.json().then(function (e) {\n          return Promise.reject(e);\n        });\n        if (!foldersRes.ok) return foldersRes.json().then(function (e) {\n          return Promise.reject(e);\n        });\n        return Promise.all([notesRes.json(), foldersRes.json()]);\n      }).then(function (_ref3) {\n        var _ref4 = _slicedToArray(_ref3, 2),\n            notes = _ref4[0],\n            folders = _ref4[1];\n\n        _this2.setState({\n          notes: notes,\n          folders: folders\n        });\n      }).catch(function (error) {\n        console.error({\n          error: error\n        });\n      });\n    }\n  }, {\n    key: \"renderNavRoutes\",\n    value: function renderNavRoutes() {\n      return React.createElement(React.Fragment, null, ['/', '/folders/:folderId'].map(function (path) {\n        return React.createElement(Route, {\n          exact: true,\n          key: path,\n          path: path,\n          component: NoteListNav,\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 72\n          },\n          __self: this\n        });\n      }), React.createElement(Route, {\n        path: \"/notes/:noteId\",\n        component: NotePageNav,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 79\n        },\n        __self: this\n      }), React.createElement(Route, {\n        path: \"/add-folder\",\n        component: NotePageNav,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 83\n        },\n        __self: this\n      }), React.createElement(Route, {\n        path: \"/add-note\",\n        component: NotePageNav,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 87\n        },\n        __self: this\n      }));\n    }\n  }, {\n    key: \"renderMainRoutes\",\n    value: function renderMainRoutes() {\n      return React.createElement(React.Fragment, null, ['/', '/folders/:folderId'].map(function (path) {\n        return React.createElement(Route, {\n          exact: true,\n          key: path,\n          path: path,\n          component: NoteListMain,\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 99\n          },\n          __self: this\n        });\n      }), React.createElement(Route, {\n        path: \"/notes/:noteId\",\n        component: NotePageMain,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 106\n        },\n        __self: this\n      }), React.createElement(Route, {\n        path: \"/add-folder\",\n        component: AddFolder,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 110\n        },\n        __self: this\n      }), React.createElement(Route, {\n        path: \"/add-note\",\n        component: AddNote,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 114\n        },\n        __self: this\n      }));\n    }\n  }, {\n    key: \"render\",\n    value: function render() {\n      var value = {\n        notes: this.state.notes,\n        folders: this.state.folders,\n        addFolder: this.handleAddFolder,\n        addNote: this.handleAddNote,\n        deleteNote: this.handleDeleteNote\n      };\n      return React.createElement(ApiContext.Provider, {\n        value: value,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 131\n        },\n        __self: this\n      }, React.createElement(\"div\", {\n        className: \"App\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 132\n        },\n        __self: this\n      }, React.createElement(\"nav\", {\n        className: \"App__nav\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 133\n        },\n        __self: this\n      }, this.renderNavRoutes()), React.createElement(\"header\", {\n        className: \"App__header\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 136\n        },\n        __self: this\n      }, React.createElement(\"h1\", {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 137\n        },\n        __self: this\n      }, React.createElement(Link, {\n        to: \"/\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 138\n        },\n        __self: this\n      }, \"Noteful\"), ' ', React.createElement(FontAwesomeIcon, {\n        icon: \"check-double\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 140\n        },\n        __self: this\n      }))), React.createElement(\"main\", {\n        className: \"App__main\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 143\n        },\n        __self: this\n      }, this.renderMainRoutes())));\n    }\n  }]);\n\n  return App;\n}(Component);\n\nexport default App;","map":{"version":3,"sources":["/Users/pdrufo/projects/noteful-client-db/src/App/App.js"],"names":["React","Component","Route","Link","FontAwesomeIcon","NoteListNav","NotePageNav","NoteListMain","NotePageMain","AddFolder","AddNote","ApiContext","config","App","state","notes","folders","handleAddFolder","folder","setState","handleAddNote","note","handleDeleteNote","noteId","filter","id","Promise","all","fetch","API_ENDPOINT","then","notesRes","foldersRes","ok","json","e","reject","catch","error","console","map","path","value","addFolder","addNote","deleteNote","renderNavRoutes","renderMainRoutes"],"mappings":"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","sourcesContent":["import React, { Component } from 'react'\r\nimport { Route, Link } from 'react-router-dom'\r\nimport { FontAwesomeIcon } from '@fortawesome/react-fontawesome'\r\nimport NoteListNav from '../NoteListNav/NoteListNav'\r\nimport NotePageNav from '../NotePageNav/NotePageNav'\r\nimport NoteListMain from '../NoteListMain/NoteListMain'\r\nimport NotePageMain from '../NotePageMain/NotePageMain'\r\nimport AddFolder from '../AddFolder/AddFolder'\r\nimport AddNote from '../AddNote/AddNote'\r\nimport ApiContext from '../ApiContext'\r\nimport config from '../config'\r\nimport './App.css'\r\n\r\nclass App extends Component {\r\n  state = {\r\n    notes: [],\r\n    folders: [],\r\n  };\r\n\r\n  componentDidMount() {\r\n    Promise.all([\r\n      fetch(`${config.API_ENDPOINT}/notes`),\r\n      fetch(`${config.API_ENDPOINT}/folders`)\r\n    ])\r\n      .then(([notesRes, foldersRes]) => {\r\n        if (!notesRes.ok)\r\n          return notesRes.json().then(e => Promise.reject(e))\r\n        if (!foldersRes.ok)\r\n          return foldersRes.json().then(e => Promise.reject(e))\r\n\r\n        return Promise.all([\r\n          notesRes.json(),\r\n          foldersRes.json(),\r\n        ])\r\n      })\r\n      .then(([notes, folders]) => {\r\n        this.setState({ notes, folders })\r\n      })\r\n      .catch(error => {\r\n        console.error({ error })\r\n      })\r\n  }\r\n\r\n  handleAddFolder = folder => {\r\n    this.setState({\r\n      folders: [\r\n        ...this.state.folders,\r\n        folder\r\n      ]\r\n    })\r\n  }\r\n\r\n  handleAddNote = note => {\r\n    this.setState({\r\n      notes: [\r\n        ...this.state.notes,\r\n        note\r\n      ]\r\n    })\r\n  }\r\n\r\n  handleDeleteNote = noteId => {\r\n    this.setState({\r\n      notes: this.state.notes.filter(note => note.id !== noteId)\r\n    })\r\n  }\r\n\r\n  renderNavRoutes() {\r\n    return (\r\n      <>\r\n        {['/', '/folders/:folderId'].map(path =>\r\n          <Route\r\n            exact\r\n            key={path}\r\n            path={path}\r\n            component={NoteListNav}\r\n          />\r\n        )}\r\n        <Route\r\n          path='/notes/:noteId'\r\n          component={NotePageNav}\r\n        />\r\n        <Route\r\n          path='/add-folder'\r\n          component={NotePageNav}\r\n        />\r\n        <Route\r\n          path='/add-note'\r\n          component={NotePageNav}\r\n        />\r\n      </>\r\n    )\r\n  }\r\n\r\n  renderMainRoutes() {\r\n    return (\r\n      <>\r\n        {['/', '/folders/:folderId'].map(path =>\r\n          <Route\r\n            exact\r\n            key={path}\r\n            path={path}\r\n            component={NoteListMain}\r\n          />\r\n        )}\r\n        <Route\r\n          path='/notes/:noteId'\r\n          component={NotePageMain}\r\n        />\r\n        <Route\r\n          path='/add-folder'\r\n          component={AddFolder}\r\n        />\r\n        <Route\r\n          path='/add-note'\r\n          component={AddNote}\r\n        />\r\n      </>\r\n    )\r\n  }\r\n\r\n  render() {\r\n    const value = {\r\n      notes: this.state.notes,\r\n      folders: this.state.folders,\r\n      addFolder: this.handleAddFolder,\r\n      addNote: this.handleAddNote,\r\n      deleteNote: this.handleDeleteNote,\r\n    }\r\n    return (\r\n      <ApiContext.Provider value={value}>\r\n        <div className='App'>\r\n          <nav className='App__nav'>\r\n            {this.renderNavRoutes()}\r\n          </nav>\r\n          <header className='App__header'>\r\n            <h1>\r\n              <Link to='/'>Noteful</Link>\r\n              {' '}\r\n              <FontAwesomeIcon icon='check-double' />\r\n            </h1>\r\n          </header>\r\n          <main className='App__main'>\r\n            {this.renderMainRoutes()}\r\n          </main>\r\n        </div>\r\n      </ApiContext.Provider>\r\n    )\r\n  }\r\n}\r\n\r\nexport default App\r\n"]},"metadata":{},"sourceType":"module"}