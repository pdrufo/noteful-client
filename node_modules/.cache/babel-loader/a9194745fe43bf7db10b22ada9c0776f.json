{"ast":null,"code":"import _classCallCheck from \"/Users/pdrufo/projects/noteful-client/node_modules/@babel/runtime/helpers/esm/classCallCheck\";\nimport _createClass from \"/Users/pdrufo/projects/noteful-client/node_modules/@babel/runtime/helpers/esm/createClass\";\nimport _possibleConstructorReturn from \"/Users/pdrufo/projects/noteful-client/node_modules/@babel/runtime/helpers/esm/possibleConstructorReturn\";\nimport _getPrototypeOf from \"/Users/pdrufo/projects/noteful-client/node_modules/@babel/runtime/helpers/esm/getPrototypeOf\";\nimport _inherits from \"/Users/pdrufo/projects/noteful-client/node_modules/@babel/runtime/helpers/esm/inherits\";\nvar _jsxFileName = \"/Users/pdrufo/projects/noteful-client/src/AddNote/AddNote.js\";\nimport React, { Component } from 'react';\nimport NotefulForm from '../NotefulForm/NotefulForm';\nimport ApiContext from '../ApiContext';\nimport config from '../config';\nimport './AddNote.css';\n\nvar AddNote =\n/*#__PURE__*/\nfunction (_React$Component) {\n  _inherits(AddNote, _React$Component);\n\n  function AddNote(props) {\n    var _this;\n\n    _classCallCheck(this, AddNote);\n\n    _this = _possibleConstructorReturn(this, _getPrototypeOf(AddNote).call(this, props));\n\n    _this.handleNoteSubmit = function (event) {\n      event.preventDefault();\n      var newNote = JSON.stringify({\n        name: _this.state.name.value,\n        folder_id: _this.state.folderId.value,\n        content: _this.state.content.value\n      });\n      fetch(\"\".concat(config.API_ENDPOINT, \"/notes\"), {\n        method: 'POST',\n        headers: {\n          'content-type': 'application/json'\n        },\n        body: newNote\n      }).then(function (res) {\n        if (!res.ok) return res.json().then(function (e) {\n          return Promise.reject(e);\n        });\n        return res.json();\n      }).then(function (response) {\n        return _this.context.addNote(response);\n      }).then(_this.props.history.push('/')).catch(function (error) {\n        alert(error.message);\n      });\n    };\n\n    _this.updateFolderId = function (folderId) {\n      _this.setState({\n        folderId: {\n          value: folderId,\n          touched: true\n        }\n      });\n    };\n\n    _this.updateName = function (name) {\n      _this.setState({\n        name: {\n          value: name,\n          touched: true\n        }\n      });\n    };\n\n    _this.updateContent = function (content) {\n      _this.setState({\n        content: {\n          value: content,\n          touched: true\n        }\n      });\n    };\n\n    _this.state = {\n      name: {\n        value: '',\n        touched: false\n      },\n      folderId: {\n        value: '',\n        touched: false\n      },\n      content: {\n        value: '',\n        touched: false\n      }\n    };\n    return _this;\n  }\n\n  _createClass(AddNote, [{\n    key: \"validateName\",\n    value: function validateName() {\n      var name = this.state.name.value.trim();\n\n      if (name.length === 0) {\n        return 'Name is required';\n      }\n    }\n  }, {\n    key: \"validateFolderSelect\",\n    value: function validateFolderSelect() {\n      var folderIsSelected = this.state.folderId.value;\n      return !folderIsSelected;\n    }\n  }, {\n    key: \"render\",\n    value: function render() {\n      var _this2 = this;\n\n      var folderList = this.context.folders.map(function (folder) {\n        return React.createElement(\"option\", {\n          key: folder.id,\n          value: folder.id,\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 99\n          },\n          __self: this\n        }, folder.folder_name);\n      });\n      return React.createElement(\"form\", {\n        onSubmit: this.handleNoteSubmit,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 105\n        },\n        __self: this\n      }, React.createElement(\"label\", {\n        htmlFor: \"note-name\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 106\n        },\n        __self: this\n      }, \"Title *\"), React.createElement(\"input\", {\n        id: \"note-name\",\n        type: \"text\",\n        name: \"note-name\",\n        onChange: function onChange(e) {\n          return _this2.updateName(e.target.value);\n        },\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 107\n        },\n        __self: this\n      }), this.state.name.touched && React.createElement(ValidationError, {\n        message: this.validateName(),\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 114\n        },\n        __self: this\n      }), React.createElement(\"label\", {\n        htmlFor: \"content\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 115\n        },\n        __self: this\n      }, \"Content\"), React.createElement(\"textarea\", {\n        id: \"content\",\n        name: \"content\",\n        onChange: function onChange(e) {\n          return _this2.updateContent(e.target.value);\n        },\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 116\n        },\n        __self: this\n      }), React.createElement(\"label\", {\n        htmlFor: \"folders\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 120\n        },\n        __self: this\n      }, \"Save in *\"), React.createElement(\"select\", {\n        id: \"folders\",\n        name: \"folders\",\n        onChange: function onChange(e) {\n          return _this2.updateFolderId(e.target.value);\n        },\n        defaultValue: \"Select Folder\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 121\n        },\n        __self: this\n      }, React.createElement(\"option\", {\n        disabled: true,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 127\n        },\n        __self: this\n      }, \"Select Folder\"), folderList), React.createElement(\"button\", {\n        type: \"submit\",\n        disabled: this.validateName() || this.validateFolderSelect(),\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 130\n        },\n        __self: this\n      }, \"Save\"));\n    }\n  }]);\n\n  return AddNote;\n}(React.Component);\n\nAddNote.contextType = ApiContext;\nexport default AddNote;","map":{"version":3,"sources":["/Users/pdrufo/projects/noteful-client/src/AddNote/AddNote.js"],"names":["React","Component","NotefulForm","ApiContext","config","AddNote","props","handleNoteSubmit","event","preventDefault","newNote","JSON","stringify","name","state","value","folder_id","folderId","content","fetch","API_ENDPOINT","method","headers","body","then","res","ok","json","e","Promise","reject","response","context","addNote","history","push","catch","error","alert","message","updateFolderId","setState","touched","updateName","updateContent","trim","length","folderIsSelected","folderList","folders","map","folder","id","folder_name","target","validateName","validateFolderSelect","contextType"],"mappings":"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","sourcesContent":["import React, { Component } from 'react'\nimport NotefulForm from '../NotefulForm/NotefulForm'\nimport ApiContext from '../ApiContext'\nimport config from '../config'\nimport './AddNote.css'\n\nclass AddNote extends React.Component {\n\tconstructor(props) {\n    super(props);\n    this.state = {\n\t\t\tname: {\n\t\t\t\tvalue: '',\n\t\t\t  touched: false\n\t\t\t},\n\t\t\tfolderId: {\n\t\t\t\tvalue: '',\n\t\t\t\ttouched: false\n\t\t\t},\n\t\t\tcontent: {\n\t\t\t\tvalue: '',\n\t\t\t\ttouched: false\n\t\t\t}\n\t\t}\n\t}\n\n\tstatic contextType = ApiContext;\n\t\n  handleNoteSubmit = (event) => {\n\t\tevent.preventDefault();\n\n\t\tconst newNote = JSON.stringify({\n      name: this.state.name.value,\n      folder_id: this.state.folderId.value,\n      content: this.state.content.value,\n    })\n\n\t\tfetch(`${config.API_ENDPOINT}/notes`,\n\t\t{\n\t\t\tmethod: 'POST',\n\t\t\theaders: { 'content-type': 'application/json' },\n\t\t\tbody: newNote\n\t\t})\n\t\t.then(res => {\n\t\t\tif (!res.ok)\n\t\t\t\treturn res.json().then(e => Promise.reject(e))\n\t\t\treturn res.json()\n\t\t})\n\t\t.then(response => this.context.addNote(response))\n\t\t.then(\n\t\t\tthis.props.history.push('/')\n\t\t)\n\t\t.catch(error => {\n\t\t\talert(error.message)\n\t\t})\n\t}\n\n  updateFolderId = (folderId) => {\n    this.setState({\n      folderId: {\n\t\t\t\tvalue: folderId,\n\t\t\t\ttouched: true\n\t\t\t}\n    })\n\t}\n\t\n\tupdateName = (name) => {\n\t\tthis.setState({\n\t\t  name: {\n\t\t\t\tvalue: name,\n\t\t\t\ttouched: true\n\t\t\t}\n\t\t})\n\t}\n\n\tupdateContent = (content) => {\n\t\tthis.setState({\n\t\t\tcontent: {\n\t\t\t\tvalue: content,\n\t\t\t\ttouched: true\n\t\t\t}\n\t\t})\n\t}\n\n  validateName() {\n\t\tconst name = this.state.name.value.trim();\n\t\t  if (name.length === 0) {\n\t\t\t\treturn 'Name is required'\n\t\t\t}\n\t}\n\n\tvalidateFolderSelect() {\n\t\tconst folderIsSelected = this.state.folderId.value;\n\t\t\treturn !folderIsSelected;\n\t}\n\n\trender() {\n    const folderList = this.context.folders.map (folder => {\n      return (\n        <option key= {folder.id} value={folder.id}>{folder.folder_name}</option>\n      )\n    })\n\n     \n\t\treturn (\n\t\t\t<form onSubmit={this.handleNoteSubmit}>\n\t\t\t\t\t<label htmlFor=\"note-name\">Title *</label>\n\t\t\t\t\t<input \n\t\t\t\t\t\tid=\"note-name\" \n\t\t\t\t\t\ttype=\"text\" \n\t\t\t\t\t\tname=\"note-name\"\n\t\t\t\t\t\tonChange={e => this.updateName(e.target.value)}\n\t\t\t\t\t>\n\t\t\t\t\t</input>\n\t\t\t\t\t{this.state.name.touched && (<ValidationError message = {this.validateName()}/>)}\n          <label htmlFor=\"content\">Content</label>\n\t\t\t\t\t<textarea id=\"content\" \n\t\t\t\t\t\tname=\"content\" \n\t\t\t\t\t\tonChange={e => this.updateContent(e.target.value)}\n\t\t\t\t\t></textarea>\n\t\t\t\t\t<label htmlFor=\"folders\">Save in *</label>\n\t\t\t\t\t<select \n\t\t\t\t\t  id=\"folders\"\n\t\t\t\t\t  name=\"folders\"\n\t\t\t\t\t\tonChange={e => this.updateFolderId(e.target.value)}\n\t\t\t\t\t\tdefaultValue=\"Select Folder\"\n\t\t\t\t\t>\n\t\t\t\t\t<option disabled>Select Folder</option>\n            {folderList}\n          </select>\n\t\t\t\t\t<button type=\"submit\"\n\t\t\t\t\tdisabled = {this.validateName()||this.validateFolderSelect()\n\t\t\t\t}\n\t\t\t\t\t>Save</button>\n\t\t\t</form>\n\t\t)\n\t}\n}\nexport default AddNote;\n"]},"metadata":{},"sourceType":"module"}