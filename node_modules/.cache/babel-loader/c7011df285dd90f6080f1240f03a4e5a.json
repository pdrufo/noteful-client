{"ast":null,"code":"import _defineProperty from \"/Users/pdrufo/projects/noteful-client-db/node_modules/@babel/runtime/helpers/esm/defineProperty\";\nimport _classCallCheck from \"/Users/pdrufo/projects/noteful-client-db/node_modules/@babel/runtime/helpers/esm/classCallCheck\";\nimport _createClass from \"/Users/pdrufo/projects/noteful-client-db/node_modules/@babel/runtime/helpers/esm/createClass\";\nimport _possibleConstructorReturn from \"/Users/pdrufo/projects/noteful-client-db/node_modules/@babel/runtime/helpers/esm/possibleConstructorReturn\";\nimport _getPrototypeOf from \"/Users/pdrufo/projects/noteful-client-db/node_modules/@babel/runtime/helpers/esm/getPrototypeOf\";\nimport _inherits from \"/Users/pdrufo/projects/noteful-client-db/node_modules/@babel/runtime/helpers/esm/inherits\";\nvar _jsxFileName = \"/Users/pdrufo/projects/noteful-client-db/src/AddNote/AddNote.js\";\nimport React, { Component } from 'react';\nimport NotefulForm from '../NotefulForm/NotefulForm';\nimport ApiContext from '../ApiContext';\nimport config from '../config';\nimport './AddNote.css';\n\nvar AddNote =\n/*#__PURE__*/\nfunction (_Component) {\n  _inherits(AddNote, _Component);\n\n  function AddNote() {\n    var _getPrototypeOf2;\n\n    var _this;\n\n    _classCallCheck(this, AddNote);\n\n    for (var _len = arguments.length, args = new Array(_len), _key = 0; _key < _len; _key++) {\n      args[_key] = arguments[_key];\n    }\n\n    _this = _possibleConstructorReturn(this, (_getPrototypeOf2 = _getPrototypeOf(AddNote)).call.apply(_getPrototypeOf2, [this].concat(args)));\n    _this.state = {\n      'note-name': \"\",\n      'note-folder-id': \"\",\n      'note-content': \"\",\n      error: null\n    };\n\n    _this.onChange = function (e) {\n      _this.setState(_defineProperty({}, e.target.name, e.target.value));\n    };\n\n    _this.handleSubmit = function (e) {\n      e.preventDefault();\n\n      if (!_this.state[\"note-name\"]) {\n        _this.setState({\n          error: \"Name is Required\"\n        });\n      } else if (!_this.state[\"note-folder-id\"]) {\n        _this.setState({\n          error: \"You must choose a folder\"\n        });\n      } else if (!_this.state[\"note-content\"]) {\n        _this.setState({\n          error: \"Content is Required\"\n        });\n      } else {\n        var newNote = {\n          name: e.target['note-name'].value,\n          content: e.target['note-content'].value,\n          folderId: e.target['note-folder-id'].value,\n          modified: new Date()\n        };\n        fetch(\"\".concat(config.API_ENDPOINT, \"/notes\"), {\n          method: 'POST',\n          headers: {\n            'content-type': 'application/json'\n          },\n          body: JSON.stringify(newNote)\n        }).then(function (res) {\n          if (!res.ok) return res.json().then(function (e) {\n            return Promise.reject(e);\n          });\n          return res.json();\n        }).then(function (note) {\n          _this.context.addNote(note);\n\n          _this.props.history.push(\"/folders/\".concat(note.folderId));\n        }).catch(function (error) {\n          console.error({\n            error: error\n          });\n        });\n      }\n    };\n\n    return _this;\n  }\n\n  _createClass(AddNote, [{\n    key: \"render\",\n    value: function render() {\n      var _this$context$folders = this.context.folders,\n          folders = _this$context$folders === void 0 ? [] : _this$context$folders;\n      return React.createElement(\"section\", {\n        className: \"AddNote\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 75\n        },\n        __self: this\n      }, React.createElement(\"h2\", {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 76\n        },\n        __self: this\n      }, \"Create a note\"), React.createElement(NotefulForm, {\n        onSubmit: this.handleSubmit,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 77\n        },\n        __self: this\n      }, React.createElement(\"div\", {\n        className: \"field\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 78\n        },\n        __self: this\n      }, React.createElement(\"label\", {\n        htmlFor: \"note-name-input\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 79\n        },\n        __self: this\n      }, \"Name\"), React.createElement(\"input\", {\n        type: \"text\",\n        id: \"note-name-input\",\n        name: \"note-name\",\n        onChange: this.onChange,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 82\n        },\n        __self: this\n      })), React.createElement(\"div\", {\n        className: \"field\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 85\n        },\n        __self: this\n      }, React.createElement(\"label\", {\n        htmlFor: \"note-folder-select\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 86\n        },\n        __self: this\n      }, \"Folder\"), React.createElement(\"select\", {\n        id: \"note-folder-select\",\n        name: \"note-folder-id\",\n        onChange: this.onChange,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 89\n        },\n        __self: this\n      }, React.createElement(\"option\", {\n        value: null,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 90\n        },\n        __self: this\n      }, \"...\"), folders.map(function (folder) {\n        return React.createElement(\"option\", {\n          key: folder.id,\n          value: folder.id,\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 92\n          },\n          __self: this\n        }, folder.name);\n      }))), React.createElement(\"div\", {\n        className: \"field\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 98\n        },\n        __self: this\n      }, React.createElement(\"label\", {\n        htmlFor: \"note-content-input\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 99\n        },\n        __self: this\n      }, \"Content\"), React.createElement(\"textarea\", {\n        id: \"note-content-input\",\n        name: \"note-content\",\n        onChange: this.onChange,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 102\n        },\n        __self: this\n      })), this.state.error && React.createElement(\"p\", {\n        style: {\n          color: \"red\",\n          fontSize: 20\n        },\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 105\n        },\n        __self: this\n      }, this.state.error), React.createElement(\"div\", {\n        className: \"buttons\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 107\n        },\n        __self: this\n      }, React.createElement(\"button\", {\n        type: \"submit\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 108\n        },\n        __self: this\n      }, \"Add note\"))));\n    }\n  }]);\n\n  return AddNote;\n}(Component);\n\nAddNote.defaultProps = {\n  history: {\n    push: function push() {}\n  }\n};\nAddNote.contextType = ApiContext;\nexport { AddNote as default };","map":{"version":3,"sources":["/Users/pdrufo/projects/noteful-client-db/src/AddNote/AddNote.js"],"names":["React","Component","NotefulForm","ApiContext","config","AddNote","state","error","onChange","e","setState","target","name","value","handleSubmit","preventDefault","newNote","content","folderId","modified","Date","fetch","API_ENDPOINT","method","headers","body","JSON","stringify","then","res","ok","json","Promise","reject","note","context","addNote","props","history","push","catch","console","folders","map","folder","id","color","fontSize","defaultProps","contextType"],"mappings":"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","sourcesContent":["import React, { Component } from 'react'\r\nimport NotefulForm from '../NotefulForm/NotefulForm'\r\nimport ApiContext from '../ApiContext'\r\nimport config from '../config'\r\nimport './AddNote.css'\r\n\r\nexport default class AddNote extends Component {\r\n  state = {\r\n    'note-name': \"\",\r\n    'note-folder-id': \"\",\r\n    'note-content': \"\",\r\n    error: null\r\n  };\r\n  static defaultProps = {\r\n    history: {\r\n      push: () => { }\r\n    },\r\n  }\r\n  static contextType = ApiContext;\r\n\r\n  onChange = e => {\r\n    this.setState({ [e.target.name]: e.target.value });\r\n  };\r\n\r\n  handleSubmit = e => {\r\n    e.preventDefault()\r\n\r\n    if (!this.state[\"note-name\"]) {\r\n      this.setState({\r\n        error:\r\n          \"Name is Required\"\r\n      });\r\n    } else if (!this.state[\"note-folder-id\"]) {\r\n      this.setState({\r\n        error: \"You must choose a folder\"\r\n      });\r\n    } else if (!this.state[\"note-content\"]) {\r\n      this.setState({\r\n        error: \"Content is Required\"\r\n      });\r\n    }  else {\r\n      const newNote = {\r\n      name: e.target['note-name'].value,\r\n      content: e.target['note-content'].value,\r\n      folderId: e.target['note-folder-id'].value,\r\n      modified: new Date(),\r\n    }\r\n    fetch(`${config.API_ENDPOINT}/notes`, {\r\n      method: 'POST',\r\n      headers: {\r\n        'content-type': 'application/json'\r\n      },\r\n      body: JSON.stringify(newNote),\r\n    })\r\n      .then(res => {\r\n        if (!res.ok)\r\n          return res.json().then(e => Promise.reject(e))\r\n        return res.json()\r\n      })\r\n      .then(note => {\r\n        this.context.addNote(note)\r\n        this.props.history.push(`/folders/${note.folderId}`)\r\n      })\r\n      .catch(error => {\r\n        console.error({ error })\r\n      });\r\n    }\r\n\r\n    \r\n  }\r\n\r\n  render() {\r\n    const { folders=[] } = this.context\r\n    return (\r\n      <section className='AddNote'>\r\n        <h2>Create a note</h2>\r\n        <NotefulForm onSubmit={this.handleSubmit}>\r\n          <div className='field'>\r\n            <label htmlFor='note-name-input'>\r\n              Name\r\n            </label>\r\n            <input type='text' id='note-name-input' name='note-name' onChange={this.onChange} />\r\n          </div>\r\n          \r\n          <div className='field'>\r\n            <label htmlFor='note-folder-select'>\r\n              Folder\r\n            </label>\r\n            <select id='note-folder-select' name='note-folder-id' onChange={this.onChange} >\r\n              <option value={null}>...</option>\r\n              {folders.map(folder =>\r\n                <option key={folder.id} value={folder.id}>\r\n                  {folder.name}\r\n                </option>\r\n              )}\r\n            </select>\r\n          </div>\r\n          <div className='field'>\r\n            <label htmlFor='note-content-input'>\r\n              Content\r\n            </label>\r\n            <textarea id='note-content-input' name='note-content'  onChange={this.onChange} />\r\n          </div>\r\n          {this.state.error && (\r\n            <p style={{ color: \"red\" ,fontSize:20}}>{this.state.error}</p>\r\n          )}\r\n          <div className='buttons'>\r\n            <button type='submit'>\r\n              Add note\r\n            </button>\r\n          </div>\r\n        </NotefulForm>\r\n      </section>\r\n    )\r\n  }\r\n}\r\n"]},"metadata":{},"sourceType":"module"}