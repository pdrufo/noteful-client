{"ast":null,"code":"export var findFolder = function findFolder() {\n  var folders = arguments.length > 0 && arguments[0] !== undefined ? arguments[0] : [];\n  var folderId = arguments.length > 1 ? arguments[1] : undefined;\n  return folders.find(function (folder) {\n    return folder.id === parseInt(folderId);\n  });\n};\nexport var findNote = function findNote() {\n  var notes = arguments.length > 0 && arguments[0] !== undefined ? arguments[0] : [];\n  var noteId = arguments.length > 1 ? arguments[1] : undefined;\n  return notes.find(function (note) {\n    return note.id === parseInt(noteId);\n  });\n};\nexport var getNotesForFolder = function getNotesForFolder() {\n  var notes = arguments.length > 0 && arguments[0] !== undefined ? arguments[0] : [];\n  var folderId = arguments.length > 1 ? arguments[1] : undefined;\n  return !folderId ? notes : notes.filter(function (note) {\n    return note.folderId === parseInt(folderId);\n  });\n};\nexport var countNotesForFolder = function countNotesForFolder() {\n  var notes = arguments.length > 0 && arguments[0] !== undefined ? arguments[0] : [];\n  var folderId = arguments.length > 1 ? arguments[1] : undefined;\n  return notes.filter(function (note) {\n    return note.folderId === folderId;\n  }).length;\n};","map":{"version":3,"sources":["/Users/pdrufo/projects/noteful-client-db/src/notes-helpers.js"],"names":["findFolder","folders","folderId","find","folder","id","parseInt","findNote","notes","noteId","note","getNotesForFolder","filter","countNotesForFolder","length"],"mappings":"AACA,OAAO,IAAMA,UAAU,GAAG,SAAbA,UAAa;AAAA,MAACC,OAAD,uEAAS,EAAT;AAAA,MAAaC,QAAb;AAAA,SACxBD,OAAO,CAACE,IAAR,CAAa,UAAAC,MAAM;AAAA,WAAIA,MAAM,CAACC,EAAP,KAAcC,QAAQ,CAACJ,QAAD,CAA1B;AAAA,GAAnB,CADwB;AAAA,CAAnB;AAGP,OAAO,IAAMK,QAAQ,GAAG,SAAXA,QAAW;AAAA,MAACC,KAAD,uEAAO,EAAP;AAAA,MAAWC,MAAX;AAAA,SACtBD,KAAK,CAACL,IAAN,CAAW,UAAAO,IAAI;AAAA,WAAIA,IAAI,CAACL,EAAL,KAAYC,QAAQ,CAACG,MAAD,CAAxB;AAAA,GAAf,CADsB;AAAA,CAAjB;AAGP,OAAO,IAAME,iBAAiB,GAAG,SAApBA,iBAAoB;AAAA,MAACH,KAAD,uEAAO,EAAP;AAAA,MAAWN,QAAX;AAAA,SAC9B,CAACA,QAAF,GACIM,KADJ,GAEIA,KAAK,CAACI,MAAN,CAAa,UAAAF,IAAI;AAAA,WAAIA,IAAI,CAACR,QAAL,KAAkBI,QAAQ,CAACJ,QAAD,CAA9B;AAAA,GAAjB,CAH2B;AAAA,CAA1B;AAMP,OAAO,IAAMW,mBAAmB,GAAG,SAAtBA,mBAAsB;AAAA,MAACL,KAAD,uEAAO,EAAP;AAAA,MAAWN,QAAX;AAAA,SACjCM,KAAK,CAACI,MAAN,CAAa,UAAAF,IAAI;AAAA,WAAIA,IAAI,CAACR,QAAL,KAAkBA,QAAtB;AAAA,GAAjB,EAAiDY,MADhB;AAAA,CAA5B","sourcesContent":["\r\nexport const findFolder = (folders=[], folderId) =>\r\n  folders.find(folder => folder.id === parseInt(folderId))\r\n\r\nexport const findNote = (notes=[], noteId) =>\r\n  notes.find(note => note.id === parseInt(noteId))\r\n\r\nexport const getNotesForFolder = (notes=[], folderId) => (\r\n  (!folderId)\r\n    ? notes\r\n    : notes.filter(note => note.folderId === parseInt(folderId))\r\n)\r\n\r\nexport const countNotesForFolder = (notes=[], folderId) =>\r\n  notes.filter(note => note.folderId === folderId).length\r\n"]},"metadata":{},"sourceType":"module"}